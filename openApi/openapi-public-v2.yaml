openapi: 3.0.1
info:
  title: SprintHive Income Verification API
  description: >-
    # Introduction

    The Income Verification API allows a client to extract and analyse income data from bank statements and payslips

    ## Usage
      *  Create an income verification
      *  Upload a bank statement or a payslip
      *  When income completion notification is received make a get request to get the latest income verification state

    <!-- ReDoc-Inject: <security-definitions> -->
  contact:
    name: SprintHive
    url: 'https://sprinthive.com/#contact'
    email: buzz@sprinthive.com
  version: 2.0.0
servers:
  - url: 'https://{tenant}.{environment}.sprinthive.com/income'
    variables:
      tenant:
        description: The tenant ID will be provided by SprintHive
        default: please-specify
      environment:
        description: The environment to use
        default: uat
security:
  - bearerAuth: []
    ApiKeyAuth: []
paths:
  /v2/incomeVerification:
    post:
      tags:
        - IncomeVerificationV2
      summary: Start a new income verification
      operationId: createIncomeVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIncomeVerificationV2'
        required: true
      responses:
        '200':
          description: default response
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/IncomeVerificationCreated'
        '404':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
      security:
        - bearerAuth:
            - 'incomeVerification:create'
  '/v2/incomeVerification/{incomeVerificationId}/deaConsent':
    post:
      tags:
        - IncomeVerificationV2
      summary: Confirms that the applicant has provided consent and we can fetch their bank statement data from DEA
      operationId: deaConsent
      parameters:
        - name: incomeVerificationId
          in: path
          description: Income verification id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeaConsentV2'
        required: true
      responses:
        '200':
          description: default response
      security:
        - bearerAuth:
            - 'incomeVerification:create'
  '/v2/incomeVerification/{incomeVerificationId}':
    get:
      tags:
        - IncomeVerificationV2
      summary: Retrieve an existing income verification by its id
      operationId: getIncomeVerificationById
      parameters:
        - name: incomeVerificationId
          in: path
          description: Income verification id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/IncomeVerificationDtoV2'
        '404':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
      security:
        - bearerAuth:
            - 'incomeVerification:read'
  '/v2/incomeVerification/{incomeVerificationId}/fraudAnalysis':
    get:
      tags:
        - IncomeVerificationV2
      summary: Retrieve fraud analysis data for an income verification
      operationId: getFraudAnalysis
      parameters:
        - name: incomeVerificationId
          in: path
          description: Income verification id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/FraudAnalysisDtoV2'
        '404':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
      security:
        - bearerAuth:
            - 'incomeVerification:read'
  '/v2/incomeVerification/{incomeVerificationId}/document':
    post:
      tags:
        - IncomeVerificationV2
      operationId: uploadDocument
      summary: Upload and link a proof of income to an income verification
      parameters:
        - name: incomeVerificationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: default response
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/DocumentInfoV2'
        '404':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
      security:
        - bearerAuth:
            - 'incomeVerification:file:upload'
  '/v2/incomeVerification/{incomeVerificationId}/suspectedFraud':
    post:
      tags:
        - IncomeVerificationV2
      operationId: suspectedFraud
      summary: Create a task to review if the income verification is fraudulent
      parameters:
        - name: incomeVerificationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuspectedFraudV2'
      responses:
        '200':
          description: default response
        '404':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
      security:
        - bearerAuth:
            - 'incomeVerification:fraud:create'
  '/v2/incomeVerification/{incomeVerificationId}/confirmNotFraud':
    post:
      tags:
        - IncomeVerificationV2
      operationId: confirmNotFraud
      summary: Allows a user to confirm an income verification is not fraudulent
      parameters:
        - name: incomeVerificationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmNotFraudV2'
      responses:
        '200':
          description: default response
        '404':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
      security:
        - bearerAuth:
            - 'incomeVerification:fraud:create'
  '/v2/incomeVerification/{incomeVerificationId}/confirmFraud':
    post:
      tags:
        - IncomeVerificationV2
      operationId: confirmFraud
      summary: Allows a user to confirm an income verification is fraudulent
      parameters:
        - name: incomeVerificationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmFraudV2'
      responses:
        '200':
          description: default response
        '404':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
      security:
        - bearerAuth:
            - 'incomeVerification:fraud:create'
  '/v2/incomeVerification/{incomeVerificationId}/document/{documentId}':
    get:
      tags:
        - IncomeVerificationV2
      summary: Get the latest state for a document.
      operationId: getIncomeVerificationDocument
      parameters:
        - name: incomeVerificationId
          in: path
          description: Income verification id
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: DocumentId for the document
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/DocumentStateV2'
        '404':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
      security:
        - bearerAuth:
            - 'incomeVerification:document:read'
  '/v2/incomeVerification/{incomeVerificationId}/manualCapture/manualIncome':
    post:
      tags:
        - IncomeVerificationV2
      summary: Capture the result of manually viewing the income documents
      operationId: manualCaptureIncome
      parameters:
        - name: incomeVerificationId
          in: path
          description: Income verification id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeDeterminedV2'
        required: true
      responses:
        '200':
          description: default response
        '404':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
      security:
        - bearerAuth:
            - 'incomeVerification:manualCapture:create'
  '/v2/incomeVerification/{incomeVerificationId}/state':
    get:
      tags:
        - IncomeVerificationV2
      summary: Used to determine the most recent state of an income verification request.
      operationId: getIncomeVerificationState
      parameters:
        - name: incomeVerificationId
          in: path
          description: Income verification id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/IncomeVerificationStateV2'
        '404':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
      security:
        - bearerAuth:
            - 'incomeVerification:state:read'
  '/v2/incomeVerification/{incomeVerificationId}/transactions':
    get:
      tags:
        - IncomeVerificationV2
      summary: Returns the consolidated list of transactions that were used to determine income.
      operationId: getIncomeVerificationTransactions
      parameters:
        - name: incomeVerificationId
          in: path
          description: Income verification id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/BankStatement'
        '404':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
      security:
        - bearerAuth:
            - 'incomeVerification:state:read'
components:
  schemas:
    ErrorDetail:
      type: object
      properties:
        field:
          type: string
        errorCode:
          type: string
    ExceptionMessage:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/RequestError'
    RequestError:
      type: object
      properties:
        errorType:
          type: string
        httpCode:
          type: integer
          format: int32
        traceId:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        timestamp:
          type: string
          format: date-time
    DocumentStateV2:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/DocumentSource'
        type:
          $ref: '#/components/schemas/DocumentType'
        status:
          $ref: '#/components/schemas/DocumentStatus'
        hash:
          type: string
          nullable: true
        emailId:
          type: string
          nullable: true
        received:
          type: string
          format: date-time
        bankStatement:
          $ref: '#/components/schemas/BankStatement'
        payslip:
          $ref: '#/components/schemas/Payslip'
    CreateIncomeVerificationV2:
      required:
        - correlationId
        - primaryIncome
      type: object
      properties:
        config:
          $ref: '#/components/schemas/IncomeVerificationConfig'
        correlationId:
          type: string
        primaryIncome:
          $ref: '#/components/schemas/Declaration'
        otherIncome:
          type: array
          items:
            $ref: '#/components/schemas/Declaration'
        applicantDetails:
          $ref: '#/components/schemas/ApplicantDetails'
        invMetadata:
          $ref: '#/components/schemas/InvMetadata'
    Declaration:
      required:
        - nettIncome
      type: object
      properties:
        grossIncome:
          type: number
        nettIncome:
          type: number
        payCycleInDays:
          type: integer
          format: int32
    IncomeVerificationConfig:
      type: object
      properties:
        minTransactionDaysRequired:
          type: integer
          format: int32
        minPayslipsDaysRequired:
          type: integer
          format: int32
        minPayslipsRequired:
          type: integer
          format: int32
        timeOutMinutes:
          type: integer
          format: int64
        bankStatementAndPayslipRequired:
          type: boolean
        limitTransactionsByCutOffDate:
          type: boolean
        determineIncomeOnTimeOut:
          type: boolean
        passHigherThanDeclaredIncome:
          type: boolean
        maxAgeDays:
          $ref: '#/components/schemas/MaxAgeDaysConfig'
        incomeDetectorStrategy:
          type: string
          nullable: true
    MaxAgeDaysConfig:
      type: object
      properties:
        bank-statement:
          type: integer
          format: int32
        payslip:
          type: integer
          format: int32
    ApplicantDetails:
      type: object
      properties:
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        emailAddress:
          type: string
          nullable: true
        currentEmployerName:
          type: string
          nullable: true
        currentEmployeeNumber:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        idNumber:
          type: string
          nullable: true
        passportNumber:
          type: string
          nullable: true
        taxNo:
          type: string
          nullable: true
        bankAccountNumber:
          type: string
          nullable: true
        bankBranchCode:
          type: string
          nullable: true
        bankName:
          type: string
          nullable: true
    InvMetadata:
      type: object
      properties:
        relatedProduct:
          $ref: '#/components/schemas/RelatedProductMetadata'
    RelatedProductMetadata:
      required:
        - id
        - displayName
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        channel:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
    IncomeVerificationCreated:
      required:
        - correlationId
        - incomeVerificationId
      type: object
      properties:
        incomeVerificationId:
          type: string
        correlationId:
          type: string
    ErrorEventV2:
      required:
        - code
        - source
      type: object
      properties:
        source:
          type: string
        code:
          type: string
        message:
          type: string
    IncomeVerificationDtoV2:
      required:
        - config
      type: object
      properties:
        incomeVerificationId:
          type: string
        config:
          $ref: '#/components/schemas/IncomeVerificationConfig'
        correlationId:
          type: string
        createdDate:
          type: string
          format: date-time
        expiryDate:
          type: string
          format: date-time
        primaryIncome:
          $ref: '#/components/schemas/Declaration'
        otherIncome:
          type: array
          items:
            $ref: '#/components/schemas/Declaration'
        applicantDetails:
          $ref: '#/components/schemas/ApplicantDetails'
        invMetadata:
          $ref: '#/components/schemas/InvMetadata'
    DocumentInfoV2:
      type: object
      required:
        - documentId
      properties:
        documentId:
          type: string
        documentHash:
          type: string
        type:
          $ref: '#/components/schemas/DocumentType'
        received:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/DocumentStatus'
    FraudAnalysisDtoV2:
      type: object
      properties:
        history:
          type: array
          items:
            $ref: "#/components/schemas/FraudHistoryItem"
        profileAnalysis:
          type: array
          items:
            $ref: "#/components/schemas/ProfileHistoryItem"
    SuspectedFraudV2:
      type: object
      properties:
        reason:
          type: string
    ConfirmNotFraudV2:
      type: object
      properties:
        reason:
          type: string
    ConfirmFraudV2:
      type: object
      properties:
        reason:
          type: string
    IncomeDeterminedV2:
      type: object
      required:
        - primaryIncome
        - payments
      properties:
        primaryIncome:
          $ref: "#/components/schemas/IncomeDeterminedItem"
        otherIncome:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/IncomeDeterminedItem"
        accountHolderName:
          type: string
          nullable: true
        bankName:
          type: string
          nullable: true
        bankAccountNumber:
          type: string
          nullable: true
    DeaConsentV2:
      required:
        - businessUnit
        - providerBusinessUnit
      type: object
      properties:
        businessUnit:
          type: string
        providerBusinessUnit:
          type: string
        initials:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        idNumber:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        bankAccountNumber:
          type: string
          nullable: true
        bankBranchCode:
          type: string
          nullable: true
    IncomeVerificationStateV2:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/IncomeVerificationStatusV2'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentInfoV2'
        result:
          $ref: '#/components/schemas/IncomeVerificationResultV2'
    IncomeVerificationResultV2:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/ResultMethod'
        status:
          $ref: '#/components/schemas/ResultStatus'
        accountHolderName:
          type: string
        bankName:
          type: string
        bankAccountNumber:
          type: string
        analysisResult:
          $ref: '#/components/schemas/AnalysisResultV2'
    AnalysisResultV2:
      type: object
      properties:
        primaryIncome:
          $ref: '#/components/schemas/AnalysisResultItemV2'
        otherIncome:
          type: array
          items:
            $ref: '#/components/schemas/AnalysisResultItemV2'
    AnalysisResultItemV2:
      type: object
      properties:
        declaredNettIncome:
          type: number
        detectedNettIncome:
          type: number
        confidence:
          type: number
        variance:
          type: number
        payments:
          type: array
          items:
            $ref: "#/components/schemas/Payment"
        payDay:
          type: integer
        payCycle:
          type: integer
    IncomeVerificationStatusV2:
      type: string
      enum:
        - InProgress
        - ReferredToFraud
        - ConfirmedFraud
        - Success
        - Failed
    ResultMethod:
      type: string
      enum:
        - Automated
        - Manual
    ResultStatus:
      type: string
      enum:
        - None
        - HighConfidence
        - LowConfidence
        - Confirmed
    IncomeDeterminedItem:
      type: object
      properties:
        payments:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/Payment"
        declaredAmount:
          type: number
        payDay:
          type: string
          format: integer
          nullable: true
        payCycle:
          type: string
          format: integer
          nullable: true
    Payment:
      type: object
      properties:
        date:
          type: string
          format: date
        amount:
          type: number
    BankStatement:
      required:
        - transactions
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        name:
          type: string
        address:
          type: string
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
        balanceBroughtForward:
          type: number
        statementStartDate:
          type: string
          format: date
        statementEndDate:
          type: string
          format: date
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        grossIncome:
          type: number
        nettIncome:
          type: number
        balanceValidated:
          type: boolean
        statementDate:
          type: string
          format: date
    BankAccount:
      type: object
      properties:
        accountType:
          type: string
        accountNumber:
          type: string
        bank:
          type: string
    Transaction:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date
        description:
          type: string
        balance:
          type: number
        transactionValue:
          type: number
        failureIndicator:
          type: boolean
        inPrimaryIncomeStream:
          type: boolean
        inOtherIncomeStream:
          type: boolean
        thirdParty:
          $ref: '#/components/schemas/ThirdParty'
        category:
          type: string
        transactionType:
          type: string
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
    ThirdParty:
      type: object
      properties:
        name:
          type: string
        subDivision:
          type:
            string
    Payslip:
      type: object
      properties:
        dateEngaged:
          type: string
          format: date
        dateOfBirth:
          type: string
          format: date
        emailAddress:
          type: string
        employeeNumber:
          type: string
        employer:
          type: string
        title:
          type: string
        initials:
          type: string
        fullName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        grossIncome:
          type: number
        nettIncome:
          type: number
        idNumber:
          type: string
        jobTitle:
          type: string
        bankAccountNumber:
          type: string
        employeeAddress:
          type: string
        passportNumber:
          type: string
        taxNumber:
          type: string
        timestamp:
          type: string
          format: date
        totalDeductions:
          type: number
        totalEarnings:
          type: number
        uif:
          type: number
        companyUifContribution:
          type: number
        leaveBalance:
          type: string
    FraudHistoryItem:
      type: object
      properties:
        createdDate:
          type: string
          format: date-time
        agent:
          type: string
        documentId:
          type: string
          nullable: true
        decision:
          $ref: "#/components/schemas/Decision"
        reason:
          type: string
        fraudHints:
          type: array
          items:
            $ref: "#/components/schemas/FraudHint"
    ProfileHistoryItem:
      type: object
      properties:
        createdDate:
          type: string
          format: date-time
        profileHints:
          type: array
          items:
            $ref: "#/components/schemas/ProfileHint"
    FraudHint:
      type: object
      properties:
        hintId:
          type: string
          enum:
            - suspiciousCreatorTool
            - documentTamperLikely
            - accountNumberChanged
            - irregularAtmWithdrawalFees
            - suspiciousLastEdit
            - suspiciousSubject
            - suspiciousKeywords
            - suspiciousProducer
        riskCategory:
          type: string
          enum:
            - undetermined
            - unknown
            - low
            - moderate
            - high
    ProfileHint:
      type: object
      properties:
        hintId:
          type: string
          enum:
            - steepSpendingCurve
        riskCategory:
          $ref: "#/components/schemas/RiskCategory"
    RiskCategory:
      type: string
      enum:
        - undetermined
        - unknown
        - low
        - moderate
        - high
    Decision:
      type: string
      enum:
        - agentSuspectedFraud
        - agentConfirmedFraud
        - agentConfirmedNotFraud
        - automatedSuspectedFraud
        - automatedConfirmedFraud
        - automatedNothingSuspiciousDetected
    DocumentStatus:
      type: string
      enum:
        - Received
        - DataExtractionFailed
        - TooOld
        - ApplicantMatchFailed
        - DataExtractionCompleted
        - SuspectedFraud
        - ConfirmedFraud
    DocumentSource:
      type: string
      enum:
        - Upload
        - Email
        - DEA
        - UploadRequest
    DocumentType:
      type: string
      enum:
        - BankStatement
        - Payslip
        - Unknown
  securitySchemes:
    bearerAuth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://auth.prod.sprinthive.com/oauth/token'
          refreshUrl: 'https://auth.prod.sprinthive.com/oauth/token'
          scopes:
            'incomeVerification:create': Create Income Verification cases and read income detector strategies
            'incomeVerification:read': Read Income Verification cases
            'incomeVerification:state:read': Read the most recent state for an income verification
            'incomeVerification:file:upload': Upload documents to a income verification
            'incomeVerification:manualCapture:create': Capture the nett income for an Income Verification
            'incomeVerification:fraud:create': Suspect, and confirm fraud
            'incomeVerification:document:read': Read the state for a document
    ApiKeyAuth:
      type: apiKey
      name: apiKey
      in: header
